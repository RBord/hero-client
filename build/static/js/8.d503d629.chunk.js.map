{"version":3,"sources":["services/hero-api.js","views/editHeroPage/EditHeroPage.module.css","views/editHeroPage/EditHeroPage.jsx"],"names":["fetchAllHeroes","a","axios","get","then","res","data","fetchHeroById","id","updateHeroInfoById","patch","sendHeroToBase","post","deleteHeroById","delete","defaults","baseURL","module","exports","EditHeroPage","props","location","useLocation","history","useHistory","useState","nick","setNick","realName","setRealName","powers","setPowers","descr","setDescription","phras","setPhrase","isEdited","setIsEdited","_id","nickname","real_name","superpowers","origin_description","catch_phrase","handleChange","evt","currentTarget","name","value","reset","preventDefault","superhero","supheroAPI","console","log","useEffect","to","className","s","wrapper","onSubmit","htmlFor","type","onChange","required","input","textarea","btn","onClick","push","state","from"],"mappings":"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","file":"static/js/8.d503d629.chunk.js","sourcesContent":["import axios from 'axios'\n\naxios.defaults.baseURL = 'https://create-hero-app.herokuapp.com/api'\n\nexport async function fetchAllHeroes() {\n  return await axios.get('/superheroes').then((res) => res.data.data)\n}\n\nexport async function fetchHeroById(id) {\n  return await axios.get(`/superheroes/${id}`).then((res) => res.data.data)\n}\n\nexport async function updateHeroInfoById(id, data) {\n  return await axios\n    .patch(`/superheroes/${id}`, data)\n    .then((res) => res.data.data)\n}\n\nexport async function sendHeroToBase(data) {\n  return await axios.post('/superheroes', data).then((res) => res.data.data)\n}\n\nexport async function deleteHeroById(id) {\n  return await axios.delete(`/superheroes/${id}`).then((res) => res.data.data)\n}\n\nexport async function updateImageOfHero(id, data) {\n  return await axios.post(`/images/${id}`, data).then((res) => res.data.data)\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EditHeroPage_wrapper__1UvX1\",\"textarea\":\"EditHeroPage_textarea__jVAQt\",\"input\":\"EditHeroPage_input__36pKR\",\"btn\":\"EditHeroPage_btn__1MC6m\"};","import {useState, useEffect} from 'react'\nimport { Redirect, useLocation, useHistory} from 'react-router-dom'\nimport * as supheroAPI from '../../services/hero-api'\nimport s from './EditHeroPage.module.css'\n\nexport default function EditHeroPage(props) {\n    const location = useLocation()\n    const history = useHistory()\n\n    const [nick, setNick] = useState('')\n    const [realName, setRealName] = useState('')\n    const [powers, setPowers] = useState('')\n    const [descr, setDescription] = useState('')\n    const [phras, setPhrase] = useState('')\n\n    const [isEdited, setIsEdited] = useState(false)\n\n    const {_id, nickname, real_name, superpowers, origin_description, catch_phrase} = props.props\n    useEffect(() => {\n        setNick(nickname)\n        setRealName(real_name)\n        setPowers(superpowers)\n        setDescription(origin_description)\n        setPhrase(catch_phrase)\n    }, [nickname, real_name, superpowers, origin_description, catch_phrase])\n\n    function handleChange (evt) {\n        const {name, value} = evt.currentTarget;\n        switch (name) {\n            case 'nickname':\n                setNick(value)\n                break\n                case 'real_name':\n                    setRealName(value)\n                    break\n                    case 'superpowers':\n                        setPowers(value)\n                        break\n                        case 'origin_description':\n                            setDescription(value)\n                            break\n                            case 'catch_phrase':\n                                setPhrase(value)\n                                break\n                        default:\n                            return\n        }\n    }\n    function reset(){\n        setNick('')\n        setRealName('')\n        setPowers('')\n        setPhrase('')\n        setDescription('')\n    }\n\n    function onGoBack(){\n        history.push(location.state?.from)\n    }\n\n    async function handleSubmit(evt){\n        evt.preventDefault()\n\n        const superhero = {\n            nickname: nick,\n            real_name: realName,\n            superpowers: powers,\n            origin_description: descr,\n            catch_phrase: phras\n        }\n\n        await supheroAPI.updateHeroInfoById(_id, superhero).then(res => console.log(res))\n        reset()\n        setIsEdited(true)\n    }\n\n    return (\n        <>\n        {!isEdited ? (\n            <>\n            <h1>\n                Edit {nickname}\n            </h1>\n            <div className={s.wrapper}>\n                <form onSubmit={handleSubmit}>\n                    <label htmlFor=\"nickname\"><p>Nickname: </p>\n                        <input type=\"text\" id='nickname' name='nickname' value={nick} onChange={handleChange} required className={s.input}/>\n                    </label>\n                    <label htmlFor=\"real_name\"><p>Real Name: </p>\n                        <input type=\"text\" id='real_name' name='real_name' value={realName} onChange={handleChange} required className={s.input}/>\n                    </label>\n                    <label htmlFor=\"superpowers\"><p>Superpowers: </p>\n                        <textarea type='text' name=\"superpowers\" id=\"superpowers\" value={powers} onChange={handleChange} required className={s.textarea} />\n                    </label>\n                    <label htmlFor=\"origin_description\"><p>Description: </p>\n                        <textarea type=\"text\" id='origin_description' name='origin_description' value={descr} onChange={handleChange} className={s.textarea}/>\n                    </label>\n                    <label htmlFor=\"catch_phrase\"><p>Catch Phrase: </p>\n                        <textarea type=\"text\" id='catch_phrase' name='catch_phrase' value={phras} onChange={handleChange} className={s.textarea} />\n                    </label>\n                    <button type='submit' className={s.btn}>EDIT</button>\n                    <button type='button' onClick={onGoBack} className={s.btn}>BACK</button>\n                </form>\n            </div>\n            \n            \n            </>\n        ) : <Redirect to='/heroes'/>}\n        </>\n    )\n}"],"sourceRoot":""}